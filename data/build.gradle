plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.hilt.android)
    alias(libs.plugins.kotlin.ksp)
    alias(libs.plugins.android.junit5)
}

android {
    namespace 'com.example.data'
    compileSdk libs.versions.compile.sdk.get().toInteger()

    defaultConfig {
        minSdk libs.versions.min.sdk.get().toInteger()
        targetSdk libs.versions.target.sdk.get().toInteger()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        def localProperties = new Properties()
        localProperties.load(new FileInputStream(rootProject.file("local.properties")))

        buildConfigField "String","BASE_URL", localProperties["BASE_URL"]
        buildConfigField "String", "API_KEY", localProperties["API_KEY"]
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        buildConfig true
    }
    testOptions {
        unitTests {
            includeAndroidResources true
        }
    }
    tasks.withType(Test) {
        useJUnitPlatform()
        testLogging {
            events("passed", "skipped", "failed")
        }
    }
}

kotlin {
    jvmToolchain(8)
}

dependencies {
    implementation fileTree(dir:"libs", include:["*.jar"])

    // DataStore
    implementation libs.androidx.datastore.preferences

    // coroutines
    implementation libs.kotlinx.coroutines.android
    implementation libs.kotlinx.coroutines.core

    // Room
    implementation libs.room.runtime
    annotationProcessor libs.room.compiler
    ksp libs.room.compiler
    implementation libs.room.ktx

    // Networking
    implementation libs.retrofit
    implementation libs.retrofit.converter.moshi
    implementation libs.retrofit.kotlin.coroutines
    implementation libs.okhttp

    // Moshi
    implementation libs.moshi
    implementation libs.moshi.adapters
    ksp libs.moshi.kotlin.codegen

    // Dagger-Hilt
    implementation libs.dagger.hilt.android
    ksp libs.dagger.hilt.android.compiler

    // Testing
    testImplementation libs.androidx.test.core
    testImplementation libs.androidx.arch.core.testing
    testImplementation libs.junit.jupiter.api
    testImplementation libs.mockito.junit.jupiter
    testImplementation libs.kotlinx.coroutines.test
    testImplementation libs.mockk
    testImplementation libs.mockwebserver

    testRuntimeOnly libs.junit.jupiter.engine
}